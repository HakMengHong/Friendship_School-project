const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function addSubjects() {
  try {
    console.log('üìö Starting to add subjects to database...\n');

    // Define all subjects with Khmer names and English codes
    const subjects = [
      { name: '·ûÄ·ûª·üÜ·ûñ·üí·ûô·ûº·ûë·üê·ûö', code: 'COMP' },
      { name: '·ûÇ·ûé·û∑·ûè·ûú·û∑·ûë·üí·ûô·û∂', code: 'MATH' },
      { name: '·ûÇ·üÜ·ûì·ûº·ûö', code: 'ART' },
      { name: '·ûÇ·û∏·ûò·û∏·ûú·û∑·ûë·üí·ûô·û∂', code: 'CHEM' },
      { name: '·ûÇ·üÅ·û†·ûÄ·û∑·ûÖ·üí·ûÖ', code: 'HOME_EC' },
      { name: '·ûÖ·üÜ·ûö·üÄ·ûÑ-·ûö·ûî·û∂·üÜ', code: 'MUSIC_DANCE' },
      { name: '·ûá·û∏·ûú·ûú·û∑·ûë·üí·ûô·û∂', code: 'BIO' },
      { name: '·ûè·üÇ·ûÑ·ûü·üÅ·ûÖ·ûÄ·üí·ûè·û∏', code: 'COMPOSITION' },
      { name: '·ûí·ûö·ûé·û∏·ûò·û∂·ûè·üí·ûö', code: 'GEOMETRY' },
      { name: '·ûì·ûñ·üí·ûú·ûì·üí·ûè', code: 'ARITHMETIC' },
      { name: '·ûî·üí·ûö·ûú·ûè·üí·ûè·û∑·ûú·û∑·ûë·üí·ûô·û∂', code: 'HISTORY' },
      { name: '·ûï·üÇ·ûì·ûä·û∏·ûú·û∑·ûë·üí·ûô·û∂', code: 'GEOGRAPHY' },
      { name: '·ûó·û∂·ûü·û∂‚Äã·ûÅ·üí·ûò·üÇ·ûö', code: 'KHMER' },
      { name: '·ûó·ûº·ûò·û∑·ûú·û∑·ûë·üí·ûô·û∂', code: 'CIVICS' },
      { name: '·ûò·û∂·ûè·üí·ûö·û∂·ûî·üí·ûö·ûñ·ûì·üí·ûí·üê', code: 'GRAMMAR' },
      { name: '·ûò·üÅ·ûü·ûº·ûè·üí·ûö', code: 'POETRY' },
      { name: '·ûö·ûº·ûî·ûú·û∑·ûë·üí·ûô·û∂', code: 'PHYSICS' },
      { name: '·ûö·ûø·ûÑ·ûì·û∑·ûë·û∂·ûì', code: 'STORY' },
      { name: '·ûö·üÄ·ûì·û¢·û∂·ûì', code: 'READING' },
      { name: '·ûú·û∑·ûë·üí·ûô·û∂·ûü·û∂·ûü·üí·ûö·üí·ûè', code: 'SCIENCE' },
      { name: '·ûú·û∑·ûë·üí·ûô·û∂·ûü·û∂·ûü·üí·ûö·üí·ûè‚Äã·ûì·û∑·ûÑ·ûü·û∑·ûÄ·üí·ûü·û∂·ûü·ûÑ·üí·ûÇ·ûò', code: 'SOCIAL_SCIENCE' },
      { name: '·ûú·üÅ·ûô·üí·ûô·û∂·ûÄ·ûö·ûé·üè', code: 'LINGUISTICS' },
      { name: '·ûü·üÜ·ûé·üÅ·ûö', code: 'WRITING' },
      { name: '·ûü·ûö·ûü·üÅ·ûö·ûè·û∂·ûò·û¢·û∂·ûì', code: 'DICTATION' },
      { name: '·ûü·û∏·ûõ·ûí·ûò·üå-·ûñ·ûõ·ûö·ûä·üí·ûã·ûú·û∑·ûë·üí·ûô·û∂', code: 'MORAL_CIVICS' },
      { name: '·û†·ûè·üí·ûê·ûÄ·ûò·üí·ûò', code: 'HANDICRAFT' },
      { name: '·û¢·ûÄ·üí·ûü·ûö·ûï·üí·ûÖ·ûÑ·üã', code: 'CALLIGRAPHY' },
      { name: '·û¢·ûÑ·üã·ûÇ·üí·ûõ·üÅ·ûü', code: 'ENGLISH' },
      { name: '·û¢·ûî·üã·ûö·üÜ·ûÄ·û∂·ûô', code: 'PHYSICAL_ED' }
    ];

    console.log(`üìù Found ${subjects.length} subjects to add...\n`);

    let addedCount = 0;
    let existingCount = 0;

    for (const subject of subjects) {
      try {
        // Check if subject already exists
        const existingSubject = await prisma.subject.findUnique({
          where: { subjectCode: subject.code }
        });

        if (existingSubject) {
          console.log(`‚úÖ Subject already exists: ${subject.name} (${subject.code})`);
          existingCount++;
        } else {
          // Create new subject
          const createdSubject = await prisma.subject.create({
            data: {
              subjectName: subject.name,
              subjectCode: subject.code
            }
          });
          
          console.log(`‚ûï Subject created: ${createdSubject.subjectName} (${createdSubject.subjectCode})`);
          addedCount++;
        }
      } catch (error) {
        console.error(`‚ùå Error adding subject ${subject.name}:`, error.message);
      }
    }

    console.log('\nüéâ Subject addition completed!');
    console.log(`üìä Summary:`);
    console.log(`   - New subjects added: ${addedCount}`);
    console.log(`   - Existing subjects: ${existingCount}`);
    console.log(`   - Total subjects: ${addedCount + existingCount}`);

    // Display all subjects in database
    const allSubjects = await prisma.subject.findMany({
      orderBy: { subjectName: 'asc' }
    });

    console.log('\nüìö All subjects in database:');
    allSubjects.forEach((subject, index) => {
      console.log(`   ${index + 1}. ${subject.subjectName} (${subject.subjectCode})`);
    });

  } catch (error) {
    console.error('‚ùå Error in addSubjects function:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Run the script
addSubjects();
